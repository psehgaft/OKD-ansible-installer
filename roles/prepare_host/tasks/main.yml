---
- name: Ensure required packages are installed
  dnf:
    name:
      - git
      - wget
      - curl
      - jq
      - tar
      - unzip
      - podman
      - python3-libvirt
      - libvirt-client
      - libvirt-daemon-kvm
      - "@virtualization"
    state: present

- name: Enable and start libvirtd (if enabled)
  systemd:
    name: libvirtd
    state: started
    enabled: true
  when: enable_libvirt

- name: Add user to libvirt group
  user:
    name: "{{ ansible_env.USER }}"
    groups: libvirt
    append: yes
  when: enable_libvirt

- name: Create temporary directory
  file:
    path: "{{ tmp_dir }}"
    state: directory
    mode: '0755'

- name: Download openshift-install tarball
  get_url:
    url: "{{ base_url }}/openshift-install-linux-{{ arch }}.tar.gz"
    dest: "{{ tmp_dir }}/openshift-install.tar.gz"
    mode: '0644'

- name: Download openshift-client tarball
  get_url:
    url: "{{ base_url }}/openshift-client-linux-{{ arch }}.tar.gz"
    dest: "{{ tmp_dir }}/openshift-client.tar.gz"
    mode: '0644'

- name: Extract openshift-install
  unarchive:
    src: "{{ tmp_dir }}/openshift-install.tar.gz"
    dest: "{{ tmp_dir }}"
    remote_src: yes

- name: Extract openshift-client
  unarchive:
    src: "{{ tmp_dir }}/openshift-client.tar.gz"
    dest: "{{ tmp_dir }}"
    remote_src: yes

- name: Move binaries to /usr/local/bin
  copy:
    src: "{{ item }}"
    dest: "/usr/local/bin/{{ item | basename }}"
    remote_src: yes
    mode: '0755'
  with_items:
    - "{{ tmp_dir }}/openshift-install"
    - "{{ tmp_dir }}/oc"
    - "{{ tmp_dir }}/kubectl"

- name: Create OKD installation directory
  file:
    path: "{{ install_dir }}"
    state: directory
    mode: '0755'

- name: Display instructions to continue manually
  debug:
    msg: >
      OKD Installer setup completed.
      To generate install config, run:
      openshift-install create install-config --dir={{ install_dir }}
